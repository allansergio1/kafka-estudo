services:
  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_KRAFT_CLUSTER_ID=qVYjz2NmwG8i6A5Z5wKbcA
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka-estudo

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always

  api1:
#    build: ./api1 # Usar apenas na master
    # Se você não estiver na master, use a imagem do Docker Hub
    image: maven:3.9.9-amazoncorretto-21
    volumes:
      - ./api1:/app
    restart: always
    working_dir: /app
    command: mvn spring-boot:run
    # Configuração padrão em qualquer ambiente
    ports:
      - "3001:8080"  # host:container
    networks:
      - kafka-estudo

  api2:
#    build: ./api2 # Usar apenas na master
    # Se você não estiver na master, use a imagem do Docker Hub
    image: maven:3.9.9-amazoncorretto-21
    volumes:
      - ./api2:/app
    restart: always
    working_dir: /app
    command: mvn spring-boot:run
    # Configuração padrão em qualquer ambiente
    ports:
      - "3002:8080"
    networks:
      - kafka-estudo

networks:
  kafka-estudo:

volumes:
    portainer_data:
